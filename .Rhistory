devtools::build()
library(scholarIAE)
library(scholarIAE)
usethis::use_build_ignore()
usethis::use_build_ignore("scholarIAE.Rproj")
usethis::use_build_ignore("_assets/")
library(scholarIAE)
library(scholarIAE)
library(scholarIAE)
library(scholarIAE)
use_mit_license()
library(scholarIAE)
usethis::use_testthat()
usethis::use_test()
usethis::use_test()
devtools::check()
library(scholarIAE)
vignette("testthat")
vignette("usethis")
get_test_coverage()
testthis::get_test_coverage()
install.packages("testthis")
install.packages("testthat")
get_test_coverage()
testthis::get_test_coverage()
testthis::test_coverage()
devtools::test()
test_dir("inst/tests/", "minimal")
test_dir( "minimal")
?test_check
test_check("scholarIAE")
context("running mean")
test_that("running mean stops when it should", {
expect_error( runningmean(0, c(0,0)) )
})
test_that("running mean with constant x or position", {
n <- 100
x <- rnorm(n)
pos <- rep(0, n)
expect_equal( runningmean(pos, x, window=1), rep(mean(x), n) )
mu <- mean(x)
x <- rep(mu, n)
pos <- runif(n, 0, 5)
expect_equal( runningmean(pos, x, window=1), x)
})
test_that("running mean with constant x or position", {
n <- 100
x <- rnorm(n)
pos <- rep(0, n)
expect_equal( runningmean(pos, x, window=1), rep(mean(x), n) )
mu <- mean(x)
x <- rep(mu, n)
pos <- runif(n, 0, 5)
expect_equal( runningmean(pos, x, window=1), x)
})
test_that("running mean stops when it should", {
expect_error( runningmean(0, c(0,0)) )
})
library(scholarIAE)
test_check("scholarIAE")
test_check("tests/testthat/")
library(scholarIAE)
library(scholarIAE)
test_check("scholarIAE")
rlang::last_error()
library(scholarIAE)
rlang::last_error()
test_check("scholarIAE")
test_check("scholarIAE")
rlang::last_error()
testthat::test_dir()
testthat::test_dir("tests/testthat/")
testthat::test_dir(here::here("tests/testthat/"))
test_check("scholarIAE")
library(scholarIAE)
library(scholarIAE)
library(scholarIAE)
scholarIAE::hello()
library(scholarIAE)
devtools::load_all()
library(scholarIAE)
library(scholarIAE)
